# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: cielowigle
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: todo-maria-training
# "service" is the name of this project. This will also be added to your AWS resource names.
service: todo

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  apiGateway:
    apiKeys:
      - todoApiKey
    usagePlan:
      quota:
        limit: 500 # Maximum 500 requests per month
        period: MONTH
      throttle:
        rateLimit: 5 # Max 5 requests per second
        burstLimit: 10 # Handles request spikes
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/TodoTable

layers:
  todoLayer:
    path: layers
    compatibleRuntimes:
      - python3.11
    description: "Lambda Layer for Python dependencies"

package:
  individually: true
  patterns:
    - '!venv/**'
    - '!node_modules/**'
    - 'node_modules/node-fetch/**'
    - '!package.json'
    - '!package-lock.json'
    - '!README.md'
    - 'src/**'
    - 'layers/**'

functions:
  add_todo:
    package:
      patterns:
        - 'src/addTodo.py'
    handler: src.addTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:3
    events:
      - http:
          path: v1/todos
          method: post
          private: true
  get_todo:
    package:
      patterns:
        - 'src/getTodo.py'
    handler: src.getTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:3
    events:
      - http:
          path: v1/todos/{id}
          method: get
          private: true
  get_all_todo:
    package:
      patterns:
        - 'src/getAllTodo.py'
    handler: src.getAllTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:3
    events:
      - http:
          path: v1/todos
          method: get
          private: true
  update_todo:
    package:
      patterns:
        - 'src/updateTodo.py'
    handler: src.updateTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:3
    events:
      - http:
          path: v1/todos/{id}
          method: put
          private: true
  delete:
    package:
      patterns:
        - 'src/deleteTodo.py'
    handler: src.deleteTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:3
    events:
      - http:
          path: v1/todos/{id}
          method: delete
          private: true

resources:
  Resources:
    TodoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TodoTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: cielowigle
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: todo-maria-training
# "service" is the name of this project. This will also be added to your AWS resource names.
service: todo

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  websocketsApiName: todoWebsocketApi
  websocketsApiRouteSelectionExpression: $request.body.action
  apiGateway:
    apiKeys:
      - todoApiKey
    usagePlan:
      quota:
        limit: 500 # Maximum 500 requests per month
        period: MONTH
      throttle:
        rateLimit: 5 # Max 5 requests per second
        burstLimit: 10 # Handles request spikes
#  iam:
#    role: arn:aws:iam::598858048125:role/todo-dev-us-east-1-lambdaRole
  iam:
    role:
      name: todo-new-lambda-role
      statements: ${file(./iam.yml):iamRoleStatements}

package:
  individually: true
  patterns:
    - '!venv/**'
    - '!node_modules/**'
    - 'node_modules/node-fetch/**'
    - '!package.json'
    - '!package-lock.json'
    - '!README.md'
    - 'src/**'
    - 'layers/**'

functions:
  add_todo:
    package:
      patterns:
        - 'src/addTodo.py'
    handler: src.addTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:13
    events:
      - http:
          path: v1/todos
          method: post
          private: true
      - stream:
          type: dynamodb
          arn: arn:aws:dynamodb:us-east-1:598858048125:table/TodosNew/stream/2025-02-21T05:04:14.613
      - sqs:
          arn:aws:sqs:us-east-1:598858048125:TodoQueue

  get_todo:
    package:
      patterns:
        - 'src/getTodo.py'
    handler: src.getTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:13
    events:
      - http:
          path: v1/todos/{id}
          method: get
          private: true

  get_all_todo:
    package:
      patterns:
        - 'src/getAllTodo.py'
    handler: src.getAllTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:13
    events:
      - http:
          path: v1/todos
          method: get
          private: true

  update_todo:
    package:
      patterns:
        - 'src/updateTodo.py'
    handler: src.updateTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:13
    events:
      - http:
          path: v1/todos/{id}
          method: put
          private: true
      - stream:
          type: dynamodb
          arn: arn:aws:dynamodb:us-east-1:598858048125:table/TodosNew/stream/2025-02-21T05:04:14.613
      - sqs:
          arn:aws:sqs:us-east-1:598858048125:TodoQueue
  delete:
    package:
      patterns:
        - 'src/deleteTodo.py'
    handler: src.deleteTodo.lambda_handler
    layers:
      - arn:aws:lambda:us-east-1:598858048125:layer:todoLayer:13
    events:
      - http:
          path: v1/todos/{id}
          method: delete
          private: true
      - stream:
          type: dynamodb
          arn: arn:aws:dynamodb:us-east-1:598858048125:table/TodosNew/stream/2025-02-21T05:04:14.613
#          arn:
#            Fn::GetAtt:
#              - TodoTable # CloudFormation refers to the logical ID (TodoTable) and not the TableName
#              - StreamArn
      - sqs:
          arn:aws:sqs:us-east-1:598858048125:TodoQueue

  connect:
    package:
      patterns:
        - 'src/websocket/connect.py'
    handler: src.websocket.connect.lambda_handler
    events:
      - websocket:
          route: $connect

  disconnect:
    package:
      patterns:
        - 'src/websocket/disconnect.py'
    handler: src.websocket.disconnect.lambda_handler
    events:
      - websocket:
          route: $disconnect

  message:
    package:
      patterns:
        - 'src/websocket/message.py'
    handler: src.websocket.message.lambda_handler
    events:
      - websocket:
          route: sendMessage
      - sqs:
          arn:aws:sqs:us-east-1:598858048125:TodoQueue

  process_sqs:
    package:
      patterns:
        - 'src/sqsHandler.py'
    handler: src.sqsHandler.lambda_handler
    events:
      - sqs:
          arn:aws:sqs:us-east-1:598858048125:TodoQueue

#resources: ${file(./resources.yml):resources}
